services:
  postgres:
    image: postgres:16-alpine
    container_name: quorum_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-quorum}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-quorum}
      POSTGRES_DB: ${POSTGRES_DB:-quorum}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-quorum}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: quorum_redis
    command: >
      redis-server
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --appendonly yes
      --appendfilename "redis-data.aof"
      --requirepass ${REDIS_PASSWORD:-quorum}
    environment:
      REDIS_REPLICATION_MODE: master
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD:-quorum} ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: quorum_backend
    environment:
      # Database
      POSTGRES_USER: ${POSTGRES_USER:-quorum}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-quorum}
      POSTGRES_DB: ${POSTGRES_DB:-quorum}
      # Redis
      REDIS_URL: redis://redis:6379/0
      REDIS_PASSWORD: ${REDIS_PASSWORD:-quorum}
      # AI Provider
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      # Optional
      TALLY_API_KEY: ${TALLY_API_KEY}
      LOGFIRE_TOKEN: ${LOGFIRE_TOKEN}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quorum_frontend
    environment:
      - PUBLIC_API_BASE_URL=http://backend:8000
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local